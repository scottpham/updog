"use strict";var app=app||{};$.fn.extend({animateCss:function(a){var b="webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend";$(this).addClass("animated "+a).one(b,function(){$(this).removeClass("animated "+a)})}});var Dogs=Backbone.Model.extend({defaults:function(){return{timeIncrementer:1,clickDoges:0,clickIncrementer:1,count:0,clickerCost:5,generatorCost:50,dps:0,generators:0}},autoClicker:{},autoGenerator:{},buyGenerator:function(){var a=this.get("count"),b=this.get("generatorCost");if(b>a)return void alert("Not enough Doges");this.set("count",a-b);var c=this.get("generators")+1;this.set({generators:c}),this.setGenerator(),this.increaseCost("generatorCost")},stopAutoClick:function(){try{window.clearInterval(this.autoClicker)}catch(a){console.log(a)}},calculateDPS:function(a){var b=(this.get("dps"),this.get("timeIncrementer")),c=this.get("clickIncrementer"),d=this.get("clickDoges"),e=this.get("generators"),f=c*d/10,g=b*e;this.set("dps",f+g)},formatter:function(a){return Math.floor(a)},increaseCost:function(a){var b=this.get(a),c=(this.get("clickDoges"),1.3*b);this.set(a,this.formatter(c))},setGenerator:function(){var a=this.get("generators"),b=1e3/a;try{window.clearInterval(this.autoGenerator)}catch(c){console.log(c)}this.autoGenerator=window.setInterval(this.timeIncrement.bind(this),b),this.calculateDPS(b)},setClickDoge:function(){var a=this.get("clickDoges"),b=1e4/a;this.stopAutoClick(),this.autoClicker=window.setInterval(this.clickIncrement.bind(this),b),console.log("doges are clicking every "+b+" miliseconds"),this.calculateDPS(b)},buyClickDoge:function(){console.log("buy click doge ran");var a=this.get("count"),b=this.get("clickerCost");if(b>a)return void alert("Not enough Doges");this.set("count",a-b);var c=this.get("clickDoges")+1;this.set({clickDoges:c}),this.setClickDoge(),this.increaseCost("clickerCost")},timeIncrement:function(){console.log("time increment fired");var a=this.get("count")+this.get("timeIncrementer");this.set({count:a})},clickIncrement:function(){console.log("clickIncrement fired");var a=this.get("count")+this.get("clickIncrementer");this.set({count:a})}}),Clicker=Backbone.View.extend({initialize:function(){this.render()},events:{click:"handleClick"},handleClick:function(){this.model.clickIncrement()},render:function(){return this.$el.empty(),this.delegateEvents(),this}}),BuyClickView=Backbone.View.extend({template:_.template($("#buyClickDogeTemplate").html()),initialize:function(){this.render(),this.listenTo(this.model,"change:clickerCost",this.render)},events:{click:"handleClick"},handleClick:function(){this.model.buyClickDoge()},render:function(){return this.$el.html(this.template(this.model.toJSON())),this.delegateEvents(),this}}),GeneratorView=Backbone.View.extend({template:_.template($("#generatorTemplate").html()),initialize:function(){this.listenTo(this.model,"change:generatorCost",this.render),this.render()},events:{click:"handleClick"},handleClick:function(){this.model.buyGenerator()},render:function(){return this.$el.html(this.template(this.model.toJSON())),this.delegateEvents(),this}}),DogePic=Backbone.View.extend({template:{},render:function(){this.delegateEvents()},events:{click:"handleClick"},handleClick:function(){this.$el.animateCss("bounce"),this.model.clickIncrement()},initialize:function(){this.render(),this.listenTo(this.model,"change:clickDoges",this.newClickDoge)},newClickDoge:function(){this.$el.animateCss("bounce")}}),StatsView=Backbone.View.extend({template:_.template($("#statsTemplate").html()),initialize:function(){this.render(),this.listenTo(this.model,"change",this.render)},render:function(){this.$el.html(this.template(this.model.toJSON())),this.delegateEvents()}}),MainView=Backbone.View.extend({el:$("#backboneEl"),template:_.template($("#template").html()),initialize:function(){this.render(),this.buyClick=new BuyClickView({el:$("#buyClickDoge"),model:this.model}),this.dogePic=new DogePic({el:$("#dogepic"),model:this.model}),this.generatorView=new GeneratorView({el:$("#dogeGenerator"),model:this.model}),this.stats=new StatsView({el:$("#stats"),model:this.model})},render:function(){return this.$el.html(this.template(this.model.toJSON())),this}}),dogs=new Dogs,main=new MainView({model:dogs});